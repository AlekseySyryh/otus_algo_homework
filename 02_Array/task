Неполный массив или очередь с приоритетом.
1 задание. Динамические массивы.
Написать метод добавления и удаления элементов:
void add(T item, int index);
T remove(int index); // возвращает удаляемый элемент
по индексу во все варианты динамических массивов:
SingleArray, VectorArray, FactorArray, MatrixArray *.
+1 балл.

2 задание. Таблица сравнения производительности.
Сравнить время выполнения разных операций 
для разных массивов с разным порядком значений.
* сделать обёртку над ArrayList() и тоже сравнить.
Составить таблицу и приложить её скриншот. 
Сделать выводы и сформулировать их в нескольких предложениях.
+1 балл.

3 задание. Приоритетная очередь (на выбор).
Написать реализацию PriorityQueue - очередь с приоритетом.
Варианты реализации - список списков, массив списков
Методы к реализации:
enqueue(int priority, T item) - поместить элемент в очередь
T dequeue() - выбрать элемент из очереди
+2 балла

4 задание (на выбор).
Написать Реализацию класса SpaceArray массив массивов с неполным заполнением. 
Делать на основе одного из уже созданных массивов и/или списков.
+2 балла дополнительно.

За выполнение задания до начала следующего урока:
+1 балл.

Напишите сколько времени ушло на домашнее задание.

Для реализации можно использовать только 
стандартные массивы [], созданные классы массивов и/или списков.
Стандартные библиотеки не используем!
Критерии оценки: 1 задание. Динамические массивы. +1 балл.
2 задание. Таблица сравнение производительности. +1 балл.
3 задание (на выбор). Приоритетная очередь. +2 балла
4 задание (на выбор). +2 балла дополнительно.
За выполнение задания до начала следующего урока:
+1 балл.